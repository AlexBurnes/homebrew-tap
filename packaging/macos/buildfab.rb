# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.8.7"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.7/buildfab_macos_amd64.tar.gz"
      sha256 "baeda1ab75fe50b30f467b078056629cb31ee57ff772230189f987587d2b8e03"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.7/buildfab_macos_arm64.tar.gz"
      sha256 "abb8b3198cf2ecd2e6b74571959ed2734d4aad3ee01fbb9080a8e28ebefca233"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.7/buildfab_linux_amd64.tar.gz"
        sha256 "5997450c4ce3846b33b28aa42e937369d483a7c1f5df380545823146c59622ee"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.7/buildfab_linux_arm64.tar.gz"
        sha256 "4b1a23b5ff1a8be2657fa152d9ae1543233cf46a63ded73ebd19794ead15da41"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
