# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.11.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.11.0/buildfab_macos_amd64.tar.gz"
      sha256 "0a90f1cb8f5f2121ac668f34358f0d34b5594be18b921be1867c42fd8d3af3b0"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.11.0/buildfab_macos_arm64.tar.gz"
      sha256 "2af1f8cbd25ab34dbb3dd50d4c73679cae2e529b5d2c915ec461b0a190cd5452"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.11.0/buildfab_linux_amd64.tar.gz"
        sha256 "cd9c52f1d682377f77d134eb6a291e73bfb1e3e687fa055723428a24f5efceb2"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.11.0/buildfab_linux_arm64.tar.gz"
        sha256 "35f33f88098eefb07b499552054cb03641c38f717d924c993e99299f8120da6c"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
