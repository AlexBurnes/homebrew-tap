# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.16.7"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.7/buildfab_darwin_amd64.tar.gz"
      sha256 "a897f571c1c690b03ac8e3310876a759dc00a0315ac9d3aabeb2924dd7f02bd1"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.7/buildfab_darwin_arm64.tar.gz"
      sha256 "26bf0f0545a911ea87e760a7ed1100599e6ef2c3bf77584eb83d5614ff785dc6"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.7/buildfab_linux_amd64.tar.gz"
        sha256 "b2aa791dd4d420af44983690c540f08e444944a691bfd0c85380e18fb2822d40"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.7/buildfab_linux_arm64.tar.gz"
        sha256 "a2496b616a11361331f30cb71895ca6650d6b51264802760806cb8f99e37470f"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
