# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.15.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.0/buildfab_macos_amd64.tar.gz"
      sha256 "2e9d6b6fa0a79b128bd2bc9443085ba82d9dad2196a454cc4f38377fbb71cfd8"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.0/buildfab_macos_arm64.tar.gz"
      sha256 "397d893eb30091782ca57e9ba085382242f4986d2477651577eee96adbebb70a"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.0/buildfab_linux_amd64.tar.gz"
        sha256 "f57e479fff723023a9b8641842ad3673637cb7a3ab82a5b288630af45d9bde0a"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.0/buildfab_linux_arm64.tar.gz"
        sha256 "0642314a0d64112fc089367ec907aec76f987afafda2864a857cc04f97f52e51"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
