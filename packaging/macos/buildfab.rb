# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.24.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.0/buildfab_darwin_amd64.tar.gz"
      sha256 "dd9b1cd7b32169b58f9227430a80e33be782a1dfe2874bfaf562499dba147b53"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.0/buildfab_darwin_arm64.tar.gz"
      sha256 "0372f1814df7671142c2f736c208e77e85a504223487928216d71f9ea2378c32"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.0/buildfab_linux_amd64.tar.gz"
        sha256 "e7d4abff7e70690ae0637713e83e951895406e32c4f98130d5400c5262885a67"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.0/buildfab_linux_arm64.tar.gz"
        sha256 "466bd03cf4b6412f0a587482076b8501412fa740b0eea373fd02fcca5c8c4747"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
