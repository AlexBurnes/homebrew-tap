# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.10.3"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.3/buildfab_macos_amd64.tar.gz"
      sha256 "584d82f018933bd5aa2d49fb6079135f0de947c0726bb0b3501f65d4793850bf"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.3/buildfab_macos_arm64.tar.gz"
      sha256 "b4da4020e5f4f02dadfde66bbeba3fd76c4aefbc75e52be3b7606c11a229a702"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.3/buildfab_linux_amd64.tar.gz"
        sha256 "4896b161d4786eacfc04c7d6031307280affd7efa7bbf5b2a7a606b66aa244ac"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.3/buildfab_linux_arm64.tar.gz"
        sha256 "41a392ad395e270360f668dfdda0ee33bf306cd4c0bf000ffeea780d98458a5d"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
