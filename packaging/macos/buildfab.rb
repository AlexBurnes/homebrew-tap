# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.30.1"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.1/buildfab_darwin_amd64.tar.gz"
      sha256 "d6139a78d9dd7483cd3a3fc290aa1882903ebde68e143167badd05fcdf77b3c6"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.1/buildfab_darwin_arm64.tar.gz"
      sha256 "dadd37c3e3f607802b4938523949b8e0a8a0ff65568b6226081e4c5783a5e10a"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.1/buildfab_linux_amd64.tar.gz"
        sha256 "6e50a956075ec86c9a641a0e7b2cf224a7547ea352c5d7ee68491962706c450e"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.1/buildfab_linux_arm64.tar.gz"
        sha256 "2d19cda369a974586172764fc9a7eeae3e6a86861b360431c6e903a4171639ac"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
