# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.21.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.21.0/buildfab_darwin_amd64.tar.gz"
      sha256 "98373b0e34a1ef1f58484eded992ebd69d2944dd02bdee2736375942a53caef5"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.21.0/buildfab_darwin_arm64.tar.gz"
      sha256 "479590c130573422dc6483c945923eba0656d01d7483458e5feb4fba909ef38e"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.21.0/buildfab_linux_amd64.tar.gz"
        sha256 "c2ef719de4628fb140b35521b5e9e15a35cf072bff85064b21909182767a253f"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.21.0/buildfab_linux_arm64.tar.gz"
        sha256 "1c2521e0f4ae818b36e67e0e3b1244c5ac56af5a145a383b083ad8dc05713268"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
