# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.8.2"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.2/buildfab_macos_amd64.tar.gz"
      sha256 "c56346aed19d5b7ed8e669f6121dc25990ef15cf845e80dbcb180f3a71d35667"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.2/buildfab_macos_arm64.tar.gz"
      sha256 "47fcfd39acf3092a2ad6765e12b473c073c9f1f5843600b56f0031d1fa325ed1"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.2/buildfab_linux_amd64.tar.gz"
        sha256 "5ae0ee177b74df5af6d96772d83afcf79d6b215aaa90a8ba82ff485cc4db51ec"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.2/buildfab_linux_arm64.tar.gz"
        sha256 "210801be440e4db3bc5103cb48957315f28e4488eef0c29d2b5e0be335e99a59"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
