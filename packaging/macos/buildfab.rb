# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.22.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.22.0/buildfab_darwin_amd64.tar.gz"
      sha256 "0c90745b240e3d673cc91217d3c71bebe5dde575910ca7fe427b84a672ef5df3"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.22.0/buildfab_darwin_arm64.tar.gz"
      sha256 "903333d81aa8c8620465253723aa2368e98920a8498bcfc3335a0c5bcd8215dd"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.22.0/buildfab_linux_amd64.tar.gz"
        sha256 "df582909ee2336df4196e535d8db4d37cc907972f04a7ac27b46b99e2099371c"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.22.0/buildfab_linux_arm64.tar.gz"
        sha256 "8af2b589457ba6c5dbe48d84863d325d2a76d33e9a456f32d3aafb65ec25c15a"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
