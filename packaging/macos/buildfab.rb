# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.14.1"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.14.1/buildfab_macos_amd64.tar.gz"
      sha256 "d6abd43264578d637456a5a5474b7d54fc1d1725f68da6974f9e51e904a13a30"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.14.1/buildfab_macos_arm64.tar.gz"
      sha256 "16a46e1cd6c9c0844414412b85ed964327899dca43babe9406a26bc88c34bcd4"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.14.1/buildfab_linux_amd64.tar.gz"
        sha256 "bdb87770b0f8e264b5b05651aafa8b446f2e9528c58c1f4a912ba1c4fe92b406"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.14.1/buildfab_linux_arm64.tar.gz"
        sha256 "35fe3124a697c6cba3bff8ba6cf20ae9ecb5421b2f53aa32144df6f2fc87f69f"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
