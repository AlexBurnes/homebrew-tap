# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.16.11"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.11/buildfab_darwin_amd64.tar.gz"
      sha256 "c41230f2bf411ae8b98c3a307c8aff2af45e852913ea5b68c929260ffd8b805a"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.11/buildfab_darwin_arm64.tar.gz"
      sha256 "e311dfa55298edfdf9087bba4752f5599bbeda6f88142066c59ed84f04abb5a7"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.11/buildfab_linux_amd64.tar.gz"
        sha256 "097db99434bf58fde287f8cb0798a714e181f35da030aacac5e6489e0050e41e"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.11/buildfab_linux_arm64.tar.gz"
        sha256 "e6ea57411eb1ab59b00a10b2f071585604f8362c83e555a01f3e253960178841"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
