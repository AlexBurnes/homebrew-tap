# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.18.8"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.8/buildfab_darwin_amd64.tar.gz"
      sha256 "940390372e2103304fd8923007c8dc0bce7770fb75ac4047ce721cb20a4ea733"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.8/buildfab_darwin_arm64.tar.gz"
      sha256 "ece37aaffc6c50d407c10b27a3c127a07d49a7a344af8dba54ffc98522b6b111"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.8/buildfab_linux_amd64.tar.gz"
        sha256 "c4809d13dbbc17c06a2437bfc2a61602a8da97fd6df2d11557cd9c0be410e3f9"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.8/buildfab_linux_arm64.tar.gz"
        sha256 "49b9517b0712271b14ef5addf5c270f3c96e38eccd598a2f986baf4538b95477"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
