# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.29.1"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.29.1/buildfab_darwin_amd64.tar.gz"
      sha256 "5b12a10bf1bb35a12437cb39546b5275e24feb33a4267e68ce07d92a88b687b8"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.29.1/buildfab_darwin_arm64.tar.gz"
      sha256 "2153cae527b62d283397ccb35569569f154ef158ac8fcc4ce92f305957d3190e"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.29.1/buildfab_linux_amd64.tar.gz"
        sha256 "afb408e1be739710dfda389fc195bd0e086bfbc7e3ce96b839bd2c99e7bf6810"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.29.1/buildfab_linux_arm64.tar.gz"
        sha256 "aa6c58c64e4575750e883743065521c3e59b5f1e7063ae76fb2c3ab12bef74f0"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
