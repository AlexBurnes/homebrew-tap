# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.16.8"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.8/buildfab_darwin_amd64.tar.gz"
      sha256 "6637eb0468a230e49eac3c4fcf9abfbb9b64e4176a05354b4b183d70371c5158"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.8/buildfab_darwin_arm64.tar.gz"
      sha256 "d0e2a4c84d9217b7593635622664c88d1c8ddffb37e62a53f9078135de0b4884"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.8/buildfab_linux_amd64.tar.gz"
        sha256 "5aab636b18aaa36fc75da1839203d6bbcc77d186a3d2e0914c39df2b6f205571"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.8/buildfab_linux_arm64.tar.gz"
        sha256 "b624f1d6adc383a207874945bec248c9ad6fc9bfa20ddeeb96f0d169ba99728a"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
