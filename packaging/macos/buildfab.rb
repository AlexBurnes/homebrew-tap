# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.23.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.0/buildfab_darwin_amd64.tar.gz"
      sha256 "d9ccc9e5cd95daf8950b60f36aa983198ba31af4b658c336611981f45cfc6812"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.0/buildfab_darwin_arm64.tar.gz"
      sha256 "1570104143547b205e7f61d7ddb389534c6ae4f356c71ead69f707744512c27b"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.0/buildfab_linux_amd64.tar.gz"
        sha256 "d27e58c6b2f0bc758ca42ca3c8236584fd03b13fc2239f79759b4c5e834f509e"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.0/buildfab_linux_arm64.tar.gz"
        sha256 "f7f76baa7b6eaebab01854f990e444356f004ecbfbad604e8d8768ab0dfd0dfd"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
