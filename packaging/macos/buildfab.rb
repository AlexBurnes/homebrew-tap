# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.16.3"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.3/buildfab_darwin_amd64.tar.gz"
      sha256 "8a3d53814e9ab5083822ae798c967ea2dbc5d5ca3fdebd67c36b7ec06079d792"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.3/buildfab_darwin_arm64.tar.gz"
      sha256 "4a7082cd5ad5cd2560d7f51219a44e546c465de983e596fb5f596da776e5549f"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.3/buildfab_linux_amd64.tar.gz"
        sha256 "f918ed591f0a24589ee2a532fa31fc0f74626ed70dd09f8975e115f2f3a50635"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.3/buildfab_linux_arm64.tar.gz"
        sha256 "365cb6ca7af58fe2cd5fa8eaf93d7efdbe29651a0474e2301b0956d6b3b21e46"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
