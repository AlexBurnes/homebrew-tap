# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.30.2"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.2/buildfab_darwin_amd64.tar.gz"
      sha256 "84b2b142ee4e7f448de51533fe5fefc64ac0b20d0f6020db5f45534d28b621cd"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.2/buildfab_darwin_arm64.tar.gz"
      sha256 "bb27244a0ee0502806f5b6eb867999617625973dfeeec5e2036546150e474b64"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.2/buildfab_linux_amd64.tar.gz"
        sha256 "9ab593532e5a938bd1fea11aa11cfa68db398a0f2750c1a3910f7f6743d141b5"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.2/buildfab_linux_arm64.tar.gz"
        sha256 "fcb26d75d937837a15e99d4fd30db38224ad960cddff315271aaa07d41cc2af6"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
