# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.16.12"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.12/buildfab_darwin_amd64.tar.gz"
      sha256 "b5434e023477b163f367124662d6449261097ceb582e310e2eb8558b684edc69"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.12/buildfab_darwin_arm64.tar.gz"
      sha256 "4cf4f2d5d79f801cbb5fbee27376a97eeffa3244560407684c23714ecf31f257"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.12/buildfab_linux_amd64.tar.gz"
        sha256 "14dd3f4a37aef36c026e854eabba3091eacfff6338651471f6cc342252ded983"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.12/buildfab_linux_arm64.tar.gz"
        sha256 "b081b548a146435c729ee3eecd3724fc83d268a61336b81be5d5dad861061e1f"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
