# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.24.2"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.2/buildfab_darwin_amd64.tar.gz"
      sha256 "7dea03531c2b4d29c1218e789f21b31635bdfbb2c8d4d133ae574d330fada9ba"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.2/buildfab_darwin_arm64.tar.gz"
      sha256 "a52205b7f6df2cdf469624570675674891897a55646d6d57dddce424053b8412"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.2/buildfab_linux_amd64.tar.gz"
        sha256 "7f65d49062b83d536c4a8cf2c4e68007c704a176ab308f520f992093cb6d5c43"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.2/buildfab_linux_arm64.tar.gz"
        sha256 "1e90fcd6dbde18995b3b5c27186c443d2df1d6f467d44ad47db9d86ebfc8c97f"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
