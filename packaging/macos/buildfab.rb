# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.30.3"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.3/buildfab_darwin_amd64.tar.gz"
      sha256 "ce3e8c0d52facbf85a2e3a2318dbf0082a2500387c0fc84b5877870ec6b7463e"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.3/buildfab_darwin_arm64.tar.gz"
      sha256 "ea6786a7f13bbdc28453f9ad8a7cc8c648b04c5330708122e5fe6b76a8e08cce"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.3/buildfab_linux_amd64.tar.gz"
        sha256 "bed34ebdcdad98f6cd4f831fec0840aea5715f3260188c03dd621969b8cd681b"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.3/buildfab_linux_arm64.tar.gz"
        sha256 "9746f4fb5522b6d6b3430bdc888fa22b895dddab58a34ccf0c019e0eaffba472"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
