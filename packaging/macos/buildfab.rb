# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.30.5"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.5/buildfab_darwin_amd64.tar.gz"
      sha256 "2eac1174062472e8451e58e44ac90f1daa1d5ebcaadf7eb939f87e32882758b0"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.5/buildfab_darwin_arm64.tar.gz"
      sha256 "4a628fdadcea782e05185100dd8e7f29cedb9d444a263cd0e32e58014b7ab94b"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.5/buildfab_linux_amd64.tar.gz"
        sha256 "805dfca478b81cad2d9a1c8d97d98e702ce229fe427ba41343d162a5a9ee85a2"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.5/buildfab_linux_arm64.tar.gz"
        sha256 "d7cb4e4264583f2df9ebf52aa69ed7a4c482c47d166632aec450ac5922ed2f46"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
