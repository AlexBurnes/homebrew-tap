# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.13.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.13.0/buildfab_macos_amd64.tar.gz"
      sha256 "e82424b075aa2ec4b4a26bca6c30595fa4dfb2eb6c72a96559352a9be5c0e97f"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.13.0/buildfab_macos_arm64.tar.gz"
      sha256 "10c0356d37552f12b823845f30ea64e7ba685be291987d45f3710b97833eec99"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.13.0/buildfab_linux_amd64.tar.gz"
        sha256 "68569014a08858d621e2f62b154f66a9ebaf72b3692c919792cfea87d96bb0d6"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.13.0/buildfab_linux_arm64.tar.gz"
        sha256 "46ed18b4cbc1174aa6126b9cc9d3eeee5b6a16c198793cacc8baa1586f3763b0"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
