# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.31.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.31.0/buildfab_darwin_amd64.tar.gz"
      sha256 "0b11bf8a603ffadaa421a1d718bf0196909da845636f028d3636d6a5a20b8b16"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.31.0/buildfab_darwin_arm64.tar.gz"
      sha256 "fe7ca6ab4f680664b86b1243f9b8adb8311823976885b92827a415b4e5879b8b"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.31.0/buildfab_linux_amd64.tar.gz"
        sha256 "dce5a85edb6106475e6ac14a0b2b36c5789ce90a381fc99375ad43b7995504e8"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.31.0/buildfab_linux_arm64.tar.gz"
        sha256 "9ce0645d1c427ae9da54830cb553442da3714e93db05acd00a29b1b4aba10d6a"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
