# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.15.5"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.5/buildfab_darwin_amd64.tar.gz"
      sha256 "71f1efb604a21897a9668001f8e0c0383c4e63930bfe178bfec9d14f859272b7"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.5/buildfab_darwin_arm64.tar.gz"
      sha256 "4bff6050626fd0e55226a6bed1b35098044e63f34ff2751b6c83ed2df78fa14c"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.5/buildfab_linux_amd64.tar.gz"
        sha256 "a6373cce3c34d6ba2cfada152ae6f41209a910305fd34a6a1c3e23ecdf42a8cc"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.5/buildfab_linux_arm64.tar.gz"
        sha256 "2f9fb79be7cf54aad4358f8ad391f4a6817a5190a0ff7f45e202378ff6fee4cb"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
