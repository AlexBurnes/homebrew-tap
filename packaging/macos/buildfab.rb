# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.12.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.12.0/buildfab_macos_amd64.tar.gz"
      sha256 "4e9d1f44d87fca16949a4eada5bfc583a0e9adab5556decf42a659ae66ed8cfa"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.12.0/buildfab_macos_arm64.tar.gz"
      sha256 "e799cf46dfc58d048fa8a93ad7b92353c22f012ebc2a4ec4a261991f37ca4e56"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.12.0/buildfab_linux_amd64.tar.gz"
        sha256 "3aad991b6ab7a40c4e70563596f8db662daf038943f684c1588f669601a9c8f2"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.12.0/buildfab_linux_arm64.tar.gz"
        sha256 "cb1000772e206cb7b18f2fe4d2ceb11e55c7662027c947c699acab19d724f225"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
