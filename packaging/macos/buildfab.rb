# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.8.6"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.6/buildfab_macos_amd64.tar.gz"
      sha256 "6b74b22073c0f68e217022c3b54bd31262f067d2fcdc443e64152d14680aafae"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.6/buildfab_macos_arm64.tar.gz"
      sha256 "96c898640867b34734a1d8a8aeed078f3e456f66be79af24a745b54791e3d2d7"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.6/buildfab_linux_amd64.tar.gz"
        sha256 "0a8a724b88cf2050bd7e5703009dae904b0bd461b5c0e9ba9626f42ec7919387"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.6/buildfab_linux_arm64.tar.gz"
        sha256 "781330db976d8977e8ac7c4c69ab565d9dbccc8a97202763af73067209efe8c3"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
