# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.30.4"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.4/buildfab_darwin_amd64.tar.gz"
      sha256 "fcfa83155216c469f63c4839627d9afa999dcf78d9a75762f5018eca18f43105"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.4/buildfab_darwin_arm64.tar.gz"
      sha256 "3f11134f4c881aaf7fe298f8b604e6aa53ff7bd56ab8e77e760ba5aee4b62e59"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.4/buildfab_linux_amd64.tar.gz"
        sha256 "4ba0fdcd7c8f7ef686b166eafcbfb998cbffbbb4a35729e27e2bb3bf57ffc368"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.4/buildfab_linux_arm64.tar.gz"
        sha256 "1ce3affcfa0bf4ac6837719b92d796520cbbf58ccda7f658f423f9b09d2e05dc"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
