# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.24.4"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.4/buildfab_darwin_amd64.tar.gz"
      sha256 "d62980bca59fdd96569e9dd74b978de02704879df61488ab07b00ab1bde787ec"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.4/buildfab_darwin_arm64.tar.gz"
      sha256 "79460eaee48a9a99da755d16088f983c767e7c42d57fce0be2fb41f0d69ac1fa"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.4/buildfab_linux_amd64.tar.gz"
        sha256 "c7eb43c47d64c58e7d1010f6e00bee81d77337782df1eac76e35e952be6c4660"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.24.4/buildfab_linux_arm64.tar.gz"
        sha256 "fdb50fce4beda4d8b8c51f18504dec18ecaa9ebeda39bb1b70f090a2c01c492b"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
