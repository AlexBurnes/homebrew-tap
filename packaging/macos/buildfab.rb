# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.23.2"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.2/buildfab_darwin_amd64.tar.gz"
      sha256 "eb111545bfa968562a78271226c183a628b8bb88fc5761bf09437e7a47aa5854"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.2/buildfab_darwin_arm64.tar.gz"
      sha256 "7dac9ab31d12493c2a19a8fdd6787e7d556ad57d04280a354c1bb5ebb6f7cdd5"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.2/buildfab_linux_amd64.tar.gz"
        sha256 "d19ed47c07130bf1b91e445b14bc6f3e682c68224f04c134fda1e2b9d25ed45d"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.2/buildfab_linux_arm64.tar.gz"
        sha256 "e600d7152b4ec59ca6fb8f2ad15838e068a99f83cd1ac368c96c7964ea5037cf"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
