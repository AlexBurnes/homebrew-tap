# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.21.1"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.21.1/buildfab_darwin_amd64.tar.gz"
      sha256 "509b7dbea161c6a5bf842319273501cb3ed6c754ad94bd01541f0823e24cb15c"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.21.1/buildfab_darwin_arm64.tar.gz"
      sha256 "7e49a88d50933811f86b793082f9fab36644261411c503b2c12f4d98f81cec2b"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.21.1/buildfab_linux_amd64.tar.gz"
        sha256 "27f266252748ff28f6f602dc8158dd4eb86afc24a03ae9ab9a73828574990281"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.21.1/buildfab_linux_arm64.tar.gz"
        sha256 "7da01c2409b9f5f6cc21e63a4fe000b5d0b608a10c5cd814aca238e96f41bb07"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
