# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.14.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.14.0/buildfab_macos_amd64.tar.gz"
      sha256 "974d487b71e417838f95aef74a84f240a52c0ef384eda15f9866cf1177bf360e"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.14.0/buildfab_macos_arm64.tar.gz"
      sha256 "2efa306b818a0ae42a1763ca57b7342ec7df2f8e0e638a78c34ee5bd3b16beba"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.14.0/buildfab_linux_amd64.tar.gz"
        sha256 "098ba7abe2aa1c63f2fac9176ccb26865c67d9cd4fc55f6837616001ad9c92a4"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.14.0/buildfab_linux_arm64.tar.gz"
        sha256 "00f0bcf44486ad50d712f21ea1fb97f80fb209b55db895a8853409af36de62e4"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
