# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.16.14"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.14/buildfab_darwin_amd64.tar.gz"
      sha256 "67033dbe895113882d99caa103a8d12aa2fa45ef5541c4ba85fc413072597631"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.14/buildfab_darwin_arm64.tar.gz"
      sha256 "e581f51f24d536a50143543198e915aedb4f78d7d3110816d8429ca856ae4639"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.14/buildfab_linux_amd64.tar.gz"
        sha256 "68faec4555828bd6041b005f4442f86ebbb39de4d5e0ce4bf53821effd61a233"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.14/buildfab_linux_arm64.tar.gz"
        sha256 "5b19e1e6e657f722e1c1a6f7ae85342fe3f496a8c88f5a131cd1ebd25e57ca17"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
