# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.10.2"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.2/buildfab_macos_amd64.tar.gz"
      sha256 "62572d25b4c9fc9453aa150325941054abfad5afbe70923b08743423371e5632"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.2/buildfab_macos_arm64.tar.gz"
      sha256 "f8275a70e9dad073b1933b9288c13ac0c1984c8b8ff26a8613a12be36230abac"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.2/buildfab_linux_amd64.tar.gz"
        sha256 "4febf807badc328196e2fb3ebec8018e23a3df9750ad4e5eb173b84a56337639"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.2/buildfab_linux_arm64.tar.gz"
        sha256 "ab2d7822f70886ef08e5c8700642959aecf02e6f80d85503a4a910fb7ada71a3"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
