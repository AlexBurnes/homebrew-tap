# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.18.5"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.5/buildfab_darwin_amd64.tar.gz"
      sha256 "e41b121340781df14d53b730a96a4e314fa834a536d2a2067dac89438b855330"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.5/buildfab_darwin_arm64.tar.gz"
      sha256 "0cd1f6cac3cc97c0c63e3587cb4267b1919811af197cf2bb86f3d5c33b1954be"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.5/buildfab_linux_amd64.tar.gz"
        sha256 "ac3b911bb103148589b055e2cbf555ac491e0abad07ad4f96246a9efbe3856ad"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.5/buildfab_linux_arm64.tar.gz"
        sha256 "8b2901bff60b14562251cb113d5721702a899c12417c193f77276fafb9655cc2"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
