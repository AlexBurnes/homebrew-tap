# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.25.3"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.25.3/buildfab_darwin_amd64.tar.gz"
      sha256 "0df39ba0faf6eacb89a279874c38d391496b6d2fff86121393a119e740d55a08"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.25.3/buildfab_darwin_arm64.tar.gz"
      sha256 "ec2da5cfe8e0bac26888c8d40f67dfd662ee4629ec3ba3d0077a0eb79fb0b952"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.25.3/buildfab_linux_amd64.tar.gz"
        sha256 "26726733cb5ff83f53f97096ac1418abfedcc4154a38fe3eebe2c1c50c638886"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.25.3/buildfab_linux_arm64.tar.gz"
        sha256 "dbbc6047c44697797e19c920b62b0f5b766f90d1e9ea709f91a32e396fe519de"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
