# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.16.6"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.6/buildfab_darwin_amd64.tar.gz"
      sha256 "80dd4aefea23956ff5e3ad4a487484134f1a1b783dc71300d8c21cd88c422f45"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.6/buildfab_darwin_arm64.tar.gz"
      sha256 "8d452825ab808214dbf29c91bfb43663117c60f82fecb1dc7cebc80662d0fdab"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.6/buildfab_linux_amd64.tar.gz"
        sha256 "defc3790e0e71e9b93885a21d286b3f6366883bf2e336d747d0244542b8c7f20"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.16.6/buildfab_linux_arm64.tar.gz"
        sha256 "5fd4152172b8a42e578e223ed0a20a29f3901e05e95223f0102e2f937d8c59ce"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
