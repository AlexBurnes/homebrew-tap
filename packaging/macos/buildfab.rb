# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.23.1"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.1/buildfab_darwin_amd64.tar.gz"
      sha256 "bc453117eb3258e2937438f0b630d226a9a96dd2fc8e9321653f79b36d530307"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.1/buildfab_darwin_arm64.tar.gz"
      sha256 "1304e47885bd647a878aa6b63daa28409377b241a479abd7e0a844090f60e3fc"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.1/buildfab_linux_amd64.tar.gz"
        sha256 "f010bccd987e941e7acb1a3e992d2a7a564cb4f10b2a9cc10da3d346d80b8441"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.1/buildfab_linux_arm64.tar.gz"
        sha256 "721c9db0958ca39bda9e24ed55eaf85a164c9f8dbce34c970cb6037dfec9f681"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
