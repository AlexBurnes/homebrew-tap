# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.30.4"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.4/buildfab_darwin_amd64.tar.gz"
      sha256 "e49b9cff47268a9a230be361a801925a20e76e956b180e20e325189b2f82b1ee"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.4/buildfab_darwin_arm64.tar.gz"
      sha256 "86bfae81560317e54f7b67d9b54b3f4566d02e9f8882cf1887fad9ef17726fb2"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.4/buildfab_linux_amd64.tar.gz"
        sha256 "fa59c64cf04cb5f9dee4b345d9ddded1a2ddcff255e01aad88b12e0802bd16c2"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.30.4/buildfab_linux_arm64.tar.gz"
        sha256 "3f4d0c07b03546bb6ed3a6f2382bb3945581793e4e1a9140f4548ade83168eb7"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
