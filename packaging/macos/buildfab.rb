# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.18.3"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.3/buildfab_darwin_amd64.tar.gz"
      sha256 "f00738857714eeb03954559d9bcdafbe329929aea8d9f1fa01c2d1994b4d7456"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.3/buildfab_darwin_arm64.tar.gz"
      sha256 "b21b20fb09a16cc3b7458db10423ab64f8c75202955f762e576202a89005eae3"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.3/buildfab_linux_amd64.tar.gz"
        sha256 "4b1c5e7d4936e9697a029865df801865a6501518ac05681358471aee456564ac"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.3/buildfab_linux_arm64.tar.gz"
        sha256 "382f4c4d1b7b3c537d129906643cc4477f8dd9e0ad579e9a832b343537b31635"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
