# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.15.1"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.1/buildfab_macos_amd64.tar.gz"
      sha256 "c829ae23ac76e8e75135895f33cace471124e62538d78d67cac251d2d923ecb5"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.1/buildfab_macos_arm64.tar.gz"
      sha256 "ae3c6c40dfeed2dcb37da128d36979bcf68b06208fcf01872d030c5b1c9b40e1"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.1/buildfab_linux_amd64.tar.gz"
        sha256 "6bafbf2e0c99356bf13286dfdac0aae215696c21acf2ad97c483a42f1cbb0fe6"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.1/buildfab_linux_arm64.tar.gz"
        sha256 "b3236efbf140770252df9398cdeaad1e49bdf669733080f889f2d3348816f7d8"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
