# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.18.7"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.7/buildfab_darwin_amd64.tar.gz"
      sha256 "bcd106a511e27b83ee86d6ac4df60006d019453345ba0305fa3273d2640b3cbd"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.7/buildfab_darwin_arm64.tar.gz"
      sha256 "7c2eeb5a6bb74df2975966005d704503d26fb38521e666f3a150bdfd44393026"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.7/buildfab_linux_amd64.tar.gz"
        sha256 "661c3c2f20cf478e5085b6752c96c85579b4f34a9cee282fe739cd734f75eb94"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.7/buildfab_linux_arm64.tar.gz"
        sha256 "0029996d029864a8ca03a1e84355da808526aa683ed6c6690925e4fc84e11256"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
