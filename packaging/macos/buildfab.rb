# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.23.3"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.3/buildfab_darwin_amd64.tar.gz"
      sha256 "7a85cfd66e87c4719accfa022f0656a79980f4d97739d25ec0b402da0f1660c6"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.3/buildfab_darwin_arm64.tar.gz"
      sha256 "f8189b15633c386bcc93c5e576c9044a997efde190926986b8d2582711dbb257"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.3/buildfab_linux_amd64.tar.gz"
        sha256 "f97aeef9fe9cc3f339593488f5e13ebb826b9d26faa7caa8c31359b62e410dd8"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.23.3/buildfab_linux_arm64.tar.gz"
        sha256 "7bb6686780313fd14593b519083c182afc49b98557229831da0311eb00220ab1"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
