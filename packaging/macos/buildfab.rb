# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.20.1"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.20.1/buildfab_darwin_amd64.tar.gz"
      sha256 "48eb0b07c7af08d97d476224fb9a2be453d84d5210ad19c764247d8dd4254644"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.20.1/buildfab_darwin_arm64.tar.gz"
      sha256 "ab061a5c3631aefe1d8a7c5c35e1f5c51963915093f45f9a2f87904fcee8055a"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.20.1/buildfab_linux_amd64.tar.gz"
        sha256 "004dc9b15522f44b2531ce3c3d88b023cad1d0b36747125bff2071618f23ec58"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.20.1/buildfab_linux_arm64.tar.gz"
        sha256 "a3293ac5e43b480089b925dc7f872f6f63c02408ff32228820469455034f7a1f"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
