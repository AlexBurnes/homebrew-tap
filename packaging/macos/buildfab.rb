# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.8.13"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.13/buildfab_macos_amd64.tar.gz"
      sha256 "95efeb0b232f0760f3be5ac42662dae457ecbd4a4039a742fb84f72a1605f673"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.13/buildfab_macos_arm64.tar.gz"
      sha256 "fa437ee02a74c98f23b0a971df75e2133db1fc1f7839e4f9cc0cd3082a07a3eb"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.13/buildfab_linux_amd64.tar.gz"
        sha256 "e1b26a07847f69874068415d3bc861aa105f29d03c8e1d4467baa59a5bb6b39f"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.13/buildfab_linux_arm64.tar.gz"
        sha256 "a3026bf52baa457b94ad1dc5ba6ef0863684ff002bb4d441c6ff66c3e9f5c530"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
