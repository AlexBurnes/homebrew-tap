# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.18.9"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.9/buildfab_darwin_amd64.tar.gz"
      sha256 "e16cb43593859735fb72ee338907ec0dddd35f88b3bfe8219e90a0cb8e7d780a"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.9/buildfab_darwin_arm64.tar.gz"
      sha256 "90b9cc28ec33a5721f2fcddb4a7897cbcac05577147df84a64ac41c1e3d599e5"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.9/buildfab_linux_amd64.tar.gz"
        sha256 "9a9817e01da5c4c8284d36b1ce8ebbce6171f579dcddcbda70628446e68849b9"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.18.9/buildfab_linux_arm64.tar.gz"
        sha256 "67de0dc7753610f444aeda3ab465ceeb78e0f60470115c62793f19971b80dd48"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
