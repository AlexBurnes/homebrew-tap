# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.10.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.0/buildfab_macos_amd64.tar.gz"
      sha256 "7598dcce78b87d5a761fad22829279489d400dd5af93e0ecebf95cc09780bcae"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.0/buildfab_macos_arm64.tar.gz"
      sha256 "eb6a6710b98a282a3b37255f0648246007e8affd32ce18478a7ef42bda873c03"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.0/buildfab_linux_amd64.tar.gz"
        sha256 "ed67c39a33959f87b96e1e5f927434fc776767803545db7502385a21241fe990"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.10.0/buildfab_linux_arm64.tar.gz"
        sha256 "a2a5f06696dbc120f52f3f1225b52d5cac7b04e448a4eebc12299c1f8af43173"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
