# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.15.3"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.3/buildfab_darwin_amd64.tar.gz"
      sha256 "4d6654f55cfb02d34d7c6801b7ce755a52a383026af9cb08cdeab3e571c8d3af"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.3/buildfab_darwin_arm64.tar.gz"
      sha256 "317a148e59502bb5b30596033683129a111194427785d2306ac6a13ee89a691d"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.3/buildfab_linux_amd64.tar.gz"
        sha256 "e3e6f1ddd66bea7d3ba63b56ed5e990a89dc8d0f539a9efaf70d240bf095ae60"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.15.3/buildfab_linux_arm64.tar.gz"
        sha256 "61444f3ee292082ec3a3f24da1e9f38752c05b567598a114d901ad29201f0241"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
