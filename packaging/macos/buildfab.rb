# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Buildfab < Formula
  desc "Go-based automation runner with DAG-based execution"
  homepage "https://github.com/AlexBurnes/buildfab"
  version "0.8.8"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.8/buildfab_macos_amd64.tar.gz"
      sha256 "34e0138190b2b6f1a0cd7a32c788aed32506b3eacd6a9f26dbc1350b4f5785e8"

      def install
        bin.install "buildfab"
      end
    end
    on_arm do
      url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.8/buildfab_macos_arm64.tar.gz"
      sha256 "759b2378bfd38dcba75412756164371a97adc3dd2812e03076a57dbe63e46b69"

      def install
        bin.install "buildfab"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.8/buildfab_linux_amd64.tar.gz"
        sha256 "912302423760639cd62be1f0a6b930a6e8e8d18303cd2d1cc8a207bf2a52764f"

        def install
          bin.install "buildfab"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/AlexBurnes/buildfab/releases/download/v0.8.8/buildfab_linux_arm64.tar.gz"
        sha256 "84bfa6d48a218ea56bbb9c9853551758e3817f6cfac8c46784bbe551b9ce72b9"

        def install
          bin.install "buildfab"
        end
      end
    end
  end

  test do
    system "#{bin}/buildfab --version"
    system "#{bin}/buildfab --help"
    system "#{bin}/buildfab list-actions"
  end
end
